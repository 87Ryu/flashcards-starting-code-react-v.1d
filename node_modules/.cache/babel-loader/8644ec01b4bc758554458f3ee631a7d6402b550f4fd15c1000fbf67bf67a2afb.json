{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { addQuiz } from '../quizzes/quizzesSlice'; // Import addQuiz from quizzesSlice\n\n// Define the initial state\nconst initialState = {\n  topics: {}\n};\nconst topicsSlice = createSlice({\n  name: 'topics',\n  initialState: {},\n  reducers: {\n    // Action to add a topic\n    addTopic: (state, action) => {\n      const {\n        id,\n        name,\n        icon\n      } = action.payload;\n      state.topics[id] = {\n        id,\n        name,\n        icon,\n        quizIds: [] // Initialize quizIds as an empty array\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addQuiz, (state, action) => {\n      const {\n        id,\n        topicId\n      } = action.payload;\n      state.topics[topicId].quizIds.push(id); // Add quiz ID to the quizIds array of the relevant topic\n    });\n  }\n});\n\n// Selector to select topics from the state\nexport const selectTopics = state => state.topics.topics;\n\n// Export the actions and reducer\nexport const {\n  addTopic\n} = topicsSlice.actions;\nexport default topicsSlice.reducer;","map":{"version":3,"names":["createSlice","addQuiz","initialState","topics","topicsSlice","name","reducers","addTopic","state","action","id","icon","payload","quizIds","extraReducers","builder","addCase","topicId","push","selectTopics","actions","reducer"],"sources":["D:/Codecademy/Projects/flashcards-starting-code-react-v.1/src/features/topics/topicsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { addQuiz } from '../quizzes/quizzesSlice'; // Import addQuiz from quizzesSlice\r\n\r\n// Define the initial state\r\nconst initialState = {\r\n    topics: {}\r\n};\r\n\r\nconst topicsSlice = createSlice({\r\n    name: 'topics',\r\n    initialState: {},\r\n    reducers: {\r\n        // Action to add a topic\r\n        addTopic: (state, action) => {\r\n            const { id, name, icon } = action.payload;\r\n            state.topics[id] = {\r\n                id,\r\n                name,\r\n                icon,\r\n                quizIds: [] // Initialize quizIds as an empty array\r\n            };\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(addQuiz, (state, action) => {\r\n            const { id, topicId } = action.payload;\r\n            state.topics[topicId].quizIds.push(id); // Add quiz ID to the quizIds array of the relevant topic\r\n        });\r\n    }\r\n});\r\n\r\n// Selector to select topics from the state\r\nexport const selectTopics = (state) => state.topics.topics;\r\n\r\n// Export the actions and reducer\r\nexport const { addTopic } = topicsSlice.actions;\r\nexport default topicsSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB,CAAC,CAAC;;AAEnD;AACA,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,CAAC;AACb,CAAC;AAED,MAAMC,WAAW,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,QAAQ;EACdH,YAAY,EAAE,CAAC,CAAC;EAChBI,QAAQ,EAAE;IACN;IACAC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,MAAM;QAAEC,EAAE;QAAEL,IAAI;QAAEM;MAAK,CAAC,GAAGF,MAAM,CAACG,OAAO;MACzCJ,KAAK,CAACL,MAAM,CAACO,EAAE,CAAC,GAAG;QACfA,EAAE;QACFL,IAAI;QACJM,IAAI;QACJE,OAAO,EAAE,EAAE,CAAC;MAChB,CAAC;IACL;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACf,OAAO,EAAE,CAACO,KAAK,EAAEC,MAAM,KAAK;MACxC,MAAM;QAAEC,EAAE;QAAEO;MAAQ,CAAC,GAAGR,MAAM,CAACG,OAAO;MACtCJ,KAAK,CAACL,MAAM,CAACc,OAAO,CAAC,CAACJ,OAAO,CAACK,IAAI,CAACR,EAAE,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMS,YAAY,GAAIX,KAAK,IAAKA,KAAK,CAACL,MAAM,CAACA,MAAM;;AAE1D;AACA,OAAO,MAAM;EAAEI;AAAS,CAAC,GAAGH,WAAW,CAACgB,OAAO;AAC/C,eAAehB,WAAW,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}